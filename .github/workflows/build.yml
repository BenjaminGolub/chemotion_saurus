name: chemotion_saurus GitHub Actions

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    if: ${{ true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # - uses: actions/cache@v2
      #   with:
      #     path: build
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-

      # - name: Build
      #   env:
      #     ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
      #     INDEX_NAME: ${{ secrets.INDEX_NAME }}
      #   run: |
      #     npm i
      #     npm run build --if-present

      - uses: fregante/setup-git-user@v1

      - name: Style Guide Parser
        if: "!contains(github.event.commits[0].message, 'skip style guide')"
        env:
          FILES: ($(git diff-tree --no-commit-id --name-only -r ${{ github.sha }}))
          FILES1: ($(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | egrep '\.mdx'))
        run: |
          echo $FILES
          echo $FILES1
          #echo "git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | egrep '\.mdx'" >> $FILES
          #echo $FILES
          # FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | egrep '\.mdx')
          
          #if [ "$files" ]; then 
          # echo ${files}
          #python3 -m pip install GitPython
          # python3 -m pip install beautifulsoup4
          # python3 src/style_guide_parser.py ${files}
          # git add ${files}
          # git commit -m "automatic: Style Guide changes"
          # git push
          #fi

      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}

      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: public
      #     path: build

  # deploy:
  #   if: |
  #     ${{ false }} #TODO
  #     github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Download build artifacts
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: public
  #       path: public

  #   - name: Setup ssh and deploy2
  #     env:
  #       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #     run: |
  #       #!/usr/bin/env bash
  #       set -euo pipefail
  #       eval $(ssh-agent -s);
  #       mkdir ~/.ssh/
  #       chmod 700 ~/.ssh
  #       echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  #       chmod 600 ~/.ssh/id_rsa
  #       ssh-add ~/.ssh/id_rsa
  #       touch ~/.ssh/known_hosts
  #       ssh-keyscan github.com >> ~/.ssh/known_hosts
  #       chmod 600 ~/.ssh/known_hosts
  #       rsync -e "ssh -o StrictHostKeyChecking=no" -az --delete ./public/ docusaurus@eln.chemotion.net:chemotion_saurus/.
